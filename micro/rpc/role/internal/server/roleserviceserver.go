// Code generated by goctl. DO NOT EDIT.
// Source: role.proto

package server

import (
	"context"

	"micro/rpc/role/internal/logic"
	"micro/rpc/role/internal/svc"
	"micro/rpc/role/roleRPC"
)

type RoleServiceServer struct {
	svcCtx *svc.ServiceContext
	roleRPC.UnimplementedRoleServiceServer
}

func NewRoleServiceServer(svcCtx *svc.ServiceContext) *RoleServiceServer {
	return &RoleServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleServiceServer) CreateRole(ctx context.Context, in *roleRPC.CreateRoleRequest) (*roleRPC.CommonResponse, error) {
	l := logic.NewCreateRoleLogic(ctx, s.svcCtx)
	return l.CreateRole(in)
}

func (s *RoleServiceServer) DeleteRole(ctx context.Context, in *roleRPC.DeleteRoleRequest) (*roleRPC.CommonResponse, error) {
	l := logic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

func (s *RoleServiceServer) UpdateRole(ctx context.Context, in *roleRPC.UpdateRoleRequest) (*roleRPC.CommonResponse, error) {
	l := logic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

func (s *RoleServiceServer) GetRole(ctx context.Context, in *roleRPC.GetRoleRequest) (*roleRPC.GetRoleResponse, error) {
	l := logic.NewGetRoleLogic(ctx, s.svcCtx)
	return l.GetRole(in)
}

func (s *RoleServiceServer) GetRoleList(ctx context.Context, in *roleRPC.GetRoleListRequest) (*roleRPC.GetUserListResponse, error) {
	l := logic.NewGetRoleListLogic(ctx, s.svcCtx)
	return l.GetRoleList(in)
}

func (s *RoleServiceServer) RoleNameHasBeenExist(ctx context.Context, in *roleRPC.RoleNamesHasBeenExistRequest) (*roleRPC.CommonResponse, error) {
	l := logic.NewRoleNameHasBeenExistLogic(ctx, s.svcCtx)
	return l.RoleNameHasBeenExist(in)
}

func (s *RoleServiceServer) RoleIDsHasBeenExist(ctx context.Context, in *roleRPC.RoleIDsHasBeenExistRequest) (*roleRPC.CommonResponse, error) {
	l := logic.NewRoleIDsHasBeenExistLogic(ctx, s.svcCtx)
	return l.RoleIDsHasBeenExist(in)
}
